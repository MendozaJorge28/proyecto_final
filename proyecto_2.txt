import tkinter as tk
from tkinter import messagebox, ttk
from datetime import datetime

class Persona:
    def __init__(self, id_persona, nombre, edad, sexo, cedula, domicilio, telefono, correo, inicio,):
        self.id_persona = id_persona
        self.nombre = nombre
        self.edad = edad
        self.sexo = sexo
        self.cedula = cedula
        self.domicilio = domicilio
        self.telefono = telefono
        self.correo = correo
        self.inicio = inicio
        self.vacaciones = []
        self.asistencias = []

personas_registradas = []
contador_id = 1

def reinicio():
    for widget in area_dinamica.winfo_children():
        widget.destroy()


def registro():
    reinicio()
    tk.Label(area_dinamica, text="Registrar trabajador", font=("Arial", 14)).pack(pady=10)

    campos = ["Nombre", "Edad", "Sexo", "Cédula", "Domicilio", "Teléfono", "Correo", "Fecha de inicio"]

    entradas = {}

    for campo in campos:
        tk.Label(area_dinamica, text=campo).pack()
        entrada = tk.Entry(area_dinamica)
        entrada.pack(pady=2)
        entradas[campo] = entrada

    def guardar_persona():
        nonlocal entradas
        global contador_id

        try:
            nombre = entradas["Nombre"].get()
            edad = int(entradas["Edad"].get())
            sexo = entradas["Sexo"].get()
            cedula =int(entradas["Cédula"].get())
            domicilio = entradas["Domicilio"].get()
            telefono = (entradas["Teléfono"].get())
            correo = entradas["Correo"].get()
            inicio = datetime.strptime(entradas["Fecha de inicio"].get(), "%Y-%m-%d").date()

            persona = Persona(contador_id, nombre, edad, sexo, cedula, domicilio, telefono, correo, inicio)
            personas_registradas.append(persona)

            messagebox.showinfo("Registro", f"Registro exitoso.\nTu ID es: {contador_id}")
            contador_id += 1

        except Exception as e:
            messagebox.showerror("Error", f"Datos inválidos. Revisa los campos.\n{e}")

    tk.Button(area_dinamica, text="Registrar", command=guardar_persona).pack(pady=10)

def turno_puesto():
    reinicio()
    tk.Label(area_dinamica, text="Asignar Turno", font=("Arial", 14)).pack(pady=10)

    tk.Label(area_dinamica, text="ID DEL TRABAJADOR:").pack()
    id = tk.Entry(area_dinamica)
    id.pack(pady=5)

    tk.Label(area_dinamica, text="Horario:").pack()
    opcion_elegida = tk.StringVar(value="text")
    tk.Radiobutton(area_dinamica, text="07:00am-03:00pm", variable=opcion_elegida, value="Matutino").pack()
    tk.Radiobutton(area_dinamica, text="03:00pm-11:00pm", variable=opcion_elegida, value="Vespertino").pack()
    tk.Radiobutton(area_dinamica, text="11:00pm-07:00am", variable=opcion_elegida, value="Nocturno").pack()

    tk.Label(area_dinamica, text="Área de trabajo:").pack()
    combo = ttk.Combobox(area_dinamica, values=["Doctor", "Conserje", "Cirujano", "Enfermero"])
    combo.pack()

    def accion_guardar():
        id_trabajador = id.get()
        turno = opcion_elegida.get()
        area = combo.get()

        messagebox.showinfo("Asignación", f"Trabajador ID: {id_trabajador}\nTurno: {turno}\nÁrea: {area}")

    tk.Button(area_dinamica, text="Guardar", command=accion_guardar).pack(pady=10)

def interfaz_tres():
    reinicio()

def interfaz_cuatro():
    reinicio()

def registrados():
    reinicio()
    tk.Label(area_dinamica, text="Trabajadores Registrados", font=("Arial", 14)).pack(pady=10)
    for persona in personas_registradas:
        info = (
            f"ID:{persona.id_persona}, Nombre: {persona.nombre}, Edad: {persona.edad}, Sexo: {persona.sexo}"
            f",Cédula: {persona.cedula},Domicilio{persona.domicilio} Numero telfonico{persona.telefono},"
            f"Correo{persona.correo},1er dia de trabajo{persona.inicio}, turno{persona.turno},A.Trabajo{persona.area}"
        )
        tk.Label(area_dinamica, text=info, anchor="w").pack(fill="x", padx=10)

ventana_principal = tk.Tk()
ventana_principal.title("Interfaz para prácticas")
ventana_principal.geometry("1000x800")
ventana_principal.config(bg="lightblue")

menu_lateral = tk.Frame(ventana_principal, bg="lightblue", width=120)
menu_lateral.pack(side="left", fill="y")

area_dinamica = tk.Frame(ventana_principal, bg="white")
area_dinamica.pack(side="right", expand=True, fill="both")

tk.Button(menu_lateral, text="Registro", command=registro, width=15).pack(pady=10)
tk.Button(menu_lateral, text="Turno", command=turno_puesto, width=15).pack(pady=10)
tk.Button(menu_lateral, text="Asistencia", command=interfaz_tres, width=15).pack(pady=10)
tk.Button(menu_lateral, text="Vacaciones", command=interfaz_cuatro, width=15).pack(pady=10)
tk.Button(menu_lateral, text="Trabajadores", command=registrados, width=15).pack(pady=10)
tk.Button(menu_lateral, text="Salir", command=ventana_principal.destroy, width=15).pack(pady=30)

registro()

ventana_principal.mainloop()