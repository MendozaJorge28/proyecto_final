import tkinter as tk
from tkinter import messagebox, ttk
from datetime import datetime

class Persona:
    def __init__(self, nombre, edad, sexo, cedula, domicilio, telefono, correo, inicio):
        self.nombre = nombre
        self.edad = edad
        self.sexo = sexo
        self.cedula = cedula
        self.domicilio = domicilio
        self.telefono = telefono
        self.correo = correo
        self.inicio = inicio
        self.vacaciones = []
        self.asistencias = []

personas_registradas = []

def reinicio():
    for widget in area_dinamica.winfo_children():
        widget.destroy()

def registro():
    reinicio()
    tk.Label(area_dinamica, text="Registrar trabajador", font=("Arial", 14)).pack(pady=10)

    campos = [
        "Nombre", "Edad", "Sexo", "Cédula",
        "Domicilio", "Teléfono", "Correo", "Fecha de inicio"
    ]

    entradas = {}

    for campo in campos:
        tk.Label(area_dinamica, text=campo).pack()
        entrada = tk.Entry(area_dinamica)
        entrada.pack(pady=2)
        entradas[campo] = entrada

    def guardar_persona():
        try:
            nombre = entradas["Nombre"].get()
            edad = int(entradas["Edad"].get())
            sexo = entradas["Sexo"].get()
            cedula = entradas["Cédula"].get()
            domicilio = entradas["Domicilio"].get()
            telefono = entradas["Teléfono"].get()
            correo = entradas["Correo"].get()
            inicio = datetime.strptime(entradas["Fecha de inicio"].get(), "%Y-%m-%d").date()

            persona = Persona(nombre, edad, sexo, cedula, domicilio, telefono, correo, inicio)
            personas_registradas.append(persona)

            messagebox.showinfo("Registro", "Registro exitoso.")
        except Exception as e:
            messagebox.showerror("Error", f"Datos inválidos. Revisa los campos.\n{e}")

    tk.Button(area_dinamica, text="Registrar", command=guardar_persona).pack(pady=10)

def interfaz_dos():
    reinicio()
    tk.Label(area_dinamica, text="Asignar Turno", font=("Arial", 14)).pack(pady=10)

    tk.Label(area_dinamica, text="Nombre del trabajador:").pack()
    campo_texto_uno = tk.Entry(area_dinamica)
    campo_texto_uno.pack(pady=5)

    tk.Label(area_dinamica, text="Turno:").pack()
    opcion_elegida = tk.StringVar(value="Matutino")
    tk.Radiobutton(area_dinamica, text="Matutino", variable=opcion_elegida, value="Matutino").pack()
    tk.Radiobutton(area_dinamica, text="Vespertino", variable=opcion_elegida, value="Vespertino").pack()
    tk.Radiobutton(area_dinamica, text="Nocturno", variable=opcion_elegida, value="Nocturno").pack()

    tk.Label(area_dinamica, text="Área de trabajo:").pack()
    combo = ttk.Combobox(area_dinamica, values=["Doctor", "Consergue", "Cirugano "])
    combo.pack()
    combo.current(0)

    def accion_guardar():
        nombre = campo_texto_uno.get()
        turno = opcion_elegida.get()
        area = combo.get()
        messagebox.showinfo("Asignación", f"Trabajador: {nombre}\nTurno: {turno}\nÁrea: {area}")

    tk.Button(area_dinamica, text="Guardar Turno", command=accion_guardar).pack(pady=10)

def interfaz_tres():
    reinicio()


def interfaz_cuatro():
    reinicio()

ventana_principal = tk.Tk()
ventana_principal.title("Interfaz para prácticas")
ventana_principal.geometry("1000x800")
ventana_principal.config(bg="lightblue")

menu_lateral = tk.Frame(ventana_principal, bg="lightblue", width=120)
menu_lateral.pack(side="left", fill="y")

area_dinamica = tk.Frame(ventana_principal, bg="white")
area_dinamica.pack(side="right", expand=True, fill="both")

tk.Button(menu_lateral, text="Registro", command=registro, width=15).pack(pady=10)
tk.Button(menu_lateral, text="Turno", command=interfaz_dos, width=15).pack(pady=10)
tk.Button(menu_lateral, text="Asistencia", command=interfaz_tres, width=15).pack(pady=10)
tk.Button(menu_lateral, text="Vacaciones", command=interfaz_cuatro, width=15).pack(pady=10)
tk.Button(menu_lateral, text="Salir", command=ventana_principal.destroy, width=15).pack(pady=30)

registro()

ventana_principal.mainloop()
